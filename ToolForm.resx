<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QdCP6v8B+BfUKqHKpWQAAAAASUVORK5CYII=
</value>
  </data>
</root>